/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package confianceoffline;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.Image;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfImage;
import com.itextpdf.text.pdf.PdfIndirectObject;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfStamper;
import confianceoffline.gestion_upload.SignOnline;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.CRC32;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Aurel
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    public static String application = "";
    public static String onlineURL = "http://confianceonline.com/";
    public static String signURL = "http://confianceonline.com/centre_certification/signer_desktop.php";
    public static String fileTosign;
    public static String manual_sign_path;
    public static String qr_code_image_path;
    public static String priv_key_path;
    public static String prefixe;
    public static String session_email;
    public static String appDir = "C:\\Confiance";

//    public static String prefixe;
    public Interface() {
        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setVisible(true);
        setResizable(false);
        choose_pnl.setVisible(true);
        conn_pnl.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back_pnl = new javax.swing.JPanel();
        choose_pnl = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        certcent_btn = new javax.swing.JButton();
        notar_btn = new javax.swing.JButton();
        signcent_btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        conn_pnl = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        email_txt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pwd_txt = new javax.swing.JTextField();
        conn_btn = new javax.swing.JButton();
        cancel_btn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        prefixetxf = new javax.swing.JTextField();
        cert_cent_pnl = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        doc_cercenter_txf = new javax.swing.JTextField();
        browefile = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        mansign_txt = new javax.swing.JTextField();
        browsemansign = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        codeqr_txt = new javax.swing.JTextField();
        browseimage = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        clepriv_key = new javax.swing.JTextField();
        browsekey = new javax.swing.JButton();
        validbtn = new javax.swing.JButton();
        sign_cent_pnl = new javax.swing.JPanel();
        not_cent_pnl = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        back_pnl.setLayout(new java.awt.CardLayout());

        choose_pnl.setBackground(new java.awt.Color(73, 68, 84));

        jLabel4.setFont(new java.awt.Font("Perpetua Titling MT", 3, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("BIENVENUE SUR CONFIANCEOFFLINE : CHOISIR VOTRE MODULE !!!");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        certcent_btn.setText("Certification center");
        certcent_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                certcent_btnActionPerformed(evt);
            }
        });

        notar_btn.setText("Notariat");

        signcent_btn.setText("Signature center");
        signcent_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signcent_btnActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("pour plus d'informations"));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 59, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout choose_pnlLayout = new org.jdesktop.layout.GroupLayout(choose_pnl);
        choose_pnl.setLayout(choose_pnlLayout);
        choose_pnlLayout.setHorizontalGroup(
            choose_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(choose_pnlLayout.createSequentialGroup()
                .add(35, 35, 35)
                .add(choose_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(choose_pnlLayout.createSequentialGroup()
                        .add(certcent_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 147, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(signcent_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(36, 36, 36)
                        .add(notar_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 136, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE))
                .add(42, 42, 42))
            .add(choose_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        choose_pnlLayout.setVerticalGroup(
            choose_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(choose_pnlLayout.createSequentialGroup()
                .add(27, 27, 27)
                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(41, 41, 41)
                .add(choose_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(certcent_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(notar_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(signcent_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(47, 47, 47)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        back_pnl.add(choose_pnl, "card4");

        conn_pnl.setBackground(new java.awt.Color(73, 68, 84));

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 3, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BIENVENUE SUR CONFIANCEOFFLINE : VEUILLEZ VOUS CONNECTER !!!");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Panneau de connexion"));

        jLabel2.setText("Adresse mail   :");
        jLabel2.setToolTipText("(sur http://confianceonline.com/centre_certification )");

        email_txt.setText("alonla@expressunion.net");
        email_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                email_txtActionPerformed(evt);
            }
        });

        jLabel3.setText("Mot de passe   :");
        jLabel3.setToolTipText("(sur http://confianceonline.com/centre_certification )");

        pwd_txt.setText("abcd1234");
        pwd_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwd_txtActionPerformed(evt);
            }
        });

        conn_btn.setText("Connexion");
        conn_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conn_btnActionPerformed(evt);
            }
        });

        cancel_btn.setText("annuler");
        cancel_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_btnActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Prefixe organisation"));
        jPanel4.setToolTipText("Si vous vous connectez au centre de certification");

        jLabel10.setText("Prefixe (5 caratères)");

        prefixetxf.setText("EXPR");
        prefixetxf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefixetxfActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(prefixetxf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(prefixetxf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(conn_btn)
                        .add(90, 90, 90)
                        .add(cancel_btn)
                        .add(54, 54, 54))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(pwd_txt))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(email_txt)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(email_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pwd_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(13, 13, 13)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(conn_btn)
                    .add(cancel_btn))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout conn_pnlLayout = new org.jdesktop.layout.GroupLayout(conn_pnl);
        conn_pnl.setLayout(conn_pnlLayout);
        conn_pnlLayout.setHorizontalGroup(
            conn_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(conn_pnlLayout.createSequentialGroup()
                .add(34, 34, 34)
                .add(conn_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        conn_pnlLayout.setVerticalGroup(
            conn_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(conn_pnlLayout.createSequentialGroup()
                .add(19, 19, 19)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        back_pnl.add(conn_pnl, "card2");

        jLabel5.setFont(new java.awt.Font("Perpetua Titling MT", 3, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("CERITIFIEZ VOS DOCUMENTS EN TOUTE SIMPLICITE !!!");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Details sur le document"));

        jLabel6.setText("Fichier à déposer :");

        browefile.setText("...");
        browefile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browefileActionPerformed(evt);
            }
        });

        jLabel7.setText("Signature manuscrite : ");

        browsemansign.setText("...");
        browsemansign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsemansignActionPerformed(evt);
            }
        });

        jLabel8.setText("Image sur code QR  :");

        browseimage.setText("...");
        browseimage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseimageActionPerformed(evt);
            }
        });

        jLabel9.setText("Clé privée  :");

        browsekey.setText("...");
        browsekey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsekeyActionPerformed(evt);
            }
        });

        validbtn.setText("Valider");
        validbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validbtnActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(doc_cercenter_txf)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(browefile))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(mansign_txt)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(browsemansign))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(codeqr_txt)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(browseimage))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(clepriv_key)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(browsekey)))
                .add(28, 28, 28))
            .add(jPanel3Layout.createSequentialGroup()
                .add(203, 203, 203)
                .add(validbtn)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(33, 33, 33)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(doc_cercenter_txf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(browefile))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(browsemansign)
                    .add(mansign_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(browseimage)
                    .add(codeqr_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(browsekey)
                    .add(clepriv_key, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel9))
                .add(18, 18, 18)
                .add(validbtn)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout cert_cent_pnlLayout = new org.jdesktop.layout.GroupLayout(cert_cent_pnl);
        cert_cent_pnl.setLayout(cert_cent_pnlLayout);
        cert_cent_pnlLayout.setHorizontalGroup(
            cert_cent_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, cert_cent_pnlLayout.createSequentialGroup()
                .add(40, 40, 40)
                .add(cert_cent_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE))
                .add(37, 37, 37))
        );
        cert_cent_pnlLayout.setVerticalGroup(
            cert_cent_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(cert_cent_pnlLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        back_pnl.add(cert_cent_pnl, "card4");

        org.jdesktop.layout.GroupLayout sign_cent_pnlLayout = new org.jdesktop.layout.GroupLayout(sign_cent_pnl);
        sign_cent_pnl.setLayout(sign_cent_pnlLayout);
        sign_cent_pnlLayout.setHorizontalGroup(
            sign_cent_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 581, Short.MAX_VALUE)
        );
        sign_cent_pnlLayout.setVerticalGroup(
            sign_cent_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 342, Short.MAX_VALUE)
        );

        back_pnl.add(sign_cent_pnl, "card5");

        org.jdesktop.layout.GroupLayout not_cent_pnlLayout = new org.jdesktop.layout.GroupLayout(not_cent_pnl);
        not_cent_pnl.setLayout(not_cent_pnlLayout);
        not_cent_pnlLayout.setHorizontalGroup(
            not_cent_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 581, Short.MAX_VALUE)
        );
        not_cent_pnlLayout.setVerticalGroup(
            not_cent_pnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 342, Short.MAX_VALUE)
        );

        back_pnl.add(not_cent_pnl, "card6");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(back_pnl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(back_pnl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void email_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_email_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_email_txtActionPerformed

    private void pwd_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwd_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwd_txtActionPerformed

    private void signcent_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signcent_btnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_signcent_btnActionPerformed

    private void certcent_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_certcent_btnActionPerformed
        // TODO add your handling code here:
        conn_pnl.setVisible(true);
        choose_pnl.setVisible(false);
        cert_cent_pnl.setVisible(false);
        sign_cent_pnl.setVisible(false);
        not_cent_pnl.setVisible(false);
        application = "centre_certification";
    }//GEN-LAST:event_certcent_btnActionPerformed

    private void conn_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conn_btnActionPerformed
        // TODO add your handling code here:
        if (!email_txt.getText().equals("") && email_txt.getText().contains("@") && !pwd_txt.getText().equals("")) {
            try {
                if (Connection.checkInternet()) {
                    Connection con = new Connection(email_txt.getText(), pwd_txt.getText(), application, onlineURL + application + "/connexion.php");
                    if (con.Connect()) {
                        session_email = email_txt.getText();
                        if ("centre_certification".equals(application)) {
                            cert_cent_pnl.setVisible(true);
                            conn_pnl.setVisible(false);
                            choose_pnl.setVisible(false);
                            sign_cent_pnl.setVisible(false);
                            not_cent_pnl.setVisible(false);
                            System.out.println("connected to " + application);
                            prefixe = prefixetxf.getText();
                            (new File(appDir + "\\" + application + "\\Documents")).mkdirs();
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Bien vouloir verifier les parametres de connexion !!!");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Bien vouloir vérifier votre connexion Internet !!!");
//                    Connection.connectionFile = Connection.connectionFilePath + File.separator + application + File.separator + "connection.txt";
//                    File f = new File(Connection.connectionFile);
//                    if (!f.exists()) {
//                        JOptionPane.showMessageDialog(null, "Bien vouloir vérifier votre connexion Internet !!!");
//                    } else {
//                        Config cf = new Config(Connection.connectionFile);
//                        String email = cf.get("email", null);
//                        String pwd = cf.get("pass", null);
//                        String prefix = cf.get("prefixe", null);
//                        if (email == null || pwd == null) {
//                            JOptionPane.showMessageDialog(null, "Bien vouloir reessayer plus tard !!!");
//                        } else {
//
//                            if ("centre_certification".equals(application)) {
//                                cert_cent_pnl.setVisible(true);
//                                conn_pnl.setVisible(false);
//                                choose_pnl.setVisible(false);
//                                sign_cent_pnl.setVisible(false);
//                                not_cent_pnl.setVisible(false);
//                                System.out.println("connected to " + application);
//                                prefixe = prefixetxf.getText();
//                            }
//                        }
//                    }
                }
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_conn_btnActionPerformed

    private void browefileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browefileActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PDF Files", "pdf");
        jfc.setFileFilter(filter);
        int returnVal = jfc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            fileTosign = file.getAbsolutePath();
            doc_cercenter_txf.setText(fileTosign);

        }
    }//GEN-LAST:event_browefileActionPerformed

    private void browsemansignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsemansignActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image files", "jpeg", "jpg", "png", "gif");
        jfc.setFileFilter(filter);
        int returnVal = jfc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            manual_sign_path = file.getAbsolutePath();
            mansign_txt.setText(manual_sign_path);

        }
    }//GEN-LAST:event_browsemansignActionPerformed

    private void browseimageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseimageActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image files", "jpeg", "jpg", "png", "gif");
        jfc.setFileFilter(filter);
        int returnVal = jfc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            qr_code_image_path = file.getAbsolutePath();
            codeqr_txt.setText(qr_code_image_path);

        }
    }//GEN-LAST:event_browseimageActionPerformed

    private void cancel_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_btnActionPerformed
        // TODO add your handling code here:
        choose_pnl.setVisible(true);
        cert_cent_pnl.setVisible(false);
        conn_pnl.setVisible(false);
        sign_cent_pnl.setVisible(false);
        not_cent_pnl.setVisible(false);
    }//GEN-LAST:event_cancel_btnActionPerformed

    private void browsekeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsekeyActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Key files", "key", "pem");
        jfc.setFileFilter(filter);
        int returnVal = jfc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            priv_key_path = file.getAbsolutePath();
            clepriv_key.setText(priv_key_path);

        }
    }//GEN-LAST:event_browsekeyActionPerformed

    private void validbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validbtnActionPerformed
        // TODO add your handling code here:
        /**
         * 1- Générer Hash du document 2- Calculer son code 3- Générer code_QR
         * 4- Ouvrir fichier 5- Coller QR sur Fichier
         */
        // Generation du code
        try {
            System.out.println("trying to upload files on server...");
            String charset = "UTF-8";
            File uploadFile1 = new File(fileTosign);
            File uploadFile2 = new File(priv_key_path);
//            File uploadFile3 = new File(manual_sign_path);

            try {
                SignOnline multipart = new SignOnline(signURL, charset);

                multipart.addHeaderField("User-Agent", "CodeJava");
                multipart.addHeaderField("Test-Header", "Header-Value");

                multipart.addFormField("email", session_email);
                multipart.addFormField("prefixe", prefixe);

                multipart.addFilePart("fichier_claire", uploadFile1);
                multipart.addFilePart("clee_priv", uploadFile2);
//                multipart.addFilePart("clee_priv", uploadFile2);

                String response = multipart.finish();

                String file_to_download = response.substring(response.length() - 44);
                System.out.println("response = " + file_to_download);
                String fileURL = onlineURL + "/" + application + "/signatures/" + file_to_download;
                String saveDir = appDir + "\\" + application + "\\Documents";
                (new File(saveDir)).mkdirs();
                if (multipart.downloadFile(fileURL, saveDir)) {
                    (new File(appDir + "\\" + application + "\\Documents\\" + file_to_download)).renameTo(new File(appDir + "\\" + application + "\\Documents\\signed_" + uploadFile1.getName()));
                    System.out.println("done...");
                } else {
                    String[] tab = response.split("||");

                    String qr_code_path = tab[0].substring(tab[0].length() - 39);
                    System.out.println("QR CODEfile is in " + qr_code_path);
                    String saveDir2 = appDir + "\\" + application + "\\Documents\\temp";
                    (new File(saveDir2)).mkdirs();
                    if (multipart.downloadFile(onlineURL + "/" + application + "/traitements/" + qr_code_path, saveDir2)) {
                        String temp_qr = appDir + "\\" + application + "\\Documents\\temp\\" + qr_code_path;

                        //si PDF
                        String extension = uploadFile1.getName().substring(uploadFile1.getName().length() - 3);
                        if (".pdf".equals(extension)) {
                            String output_sign_file = appDir + File.separator + application + File.separator + "Documents" + File.separator + "sign_" + uploadFile1.getName();
                            PdfReader reader = new PdfReader(fileTosign);
                            PdfStamper stamper = new PdfStamper(reader, new FileOutputStream(output_sign_file));
                            int pages = reader.getNumberOfPages();
//            //Iterate the pdf through pages.
                            for (int i = 1; i <= pages; i++) {
                                PdfContentByte content = stamper.getOverContent(i);
                                Image image = Image.getInstance(temp_qr);
                                image.scaleAbsoluteHeight(50);
                                image.scaleAbsoluteWidth((image.getWidth() * 50) / image.getHeight());
                                image.setAbsolutePosition(500, 50);
                                content.addImage(image);
                                Font bold = new Font(FontFamily.COURIER, 12, Font.BOLD);
                                Chunk chunk = new Chunk("Click to verify", bold);
                                chunk.setAnchor("http://confianceonline.com/" + application);
                                Phrase p = new Phrase("");
                                p.add(chunk);
                                ColumnText ct = new ColumnText(content);
                                ct.setSimpleColumn(450, 350, 559, 400);
                                ct.addText(p);
                                ct.go();
                            }
                            stamper.close();
                            PdfReader pdfReader = new PdfReader(fileTosign);
                            //Create PdfStamper instance.
                            PdfStamper pdfStamper = new PdfStamper(pdfReader, new FileOutputStream(output_sign_file));
                            //Create BaseFont instance.
                            BaseFont baseFont = BaseFont.createFont(
                                    BaseFont.TIMES_ROMAN,
                                    BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                            //Get the number of pages in pdf.
//                            int pages = pdfReader.getNumberOfPages();
//                            //Iterate the pdf through pages.
//                            for (int i = 1; i <= pages; i++) {
//                                //Contain the pdf data.
//                                PdfContentByte pageContentByte = pdfStamper.getOverContent(i);
//                                pageContentByte.beginText();
//                                //Set text font and size.
//                                pageContentByte.setFontAndSize(baseFont, 14);
//
//                                pageContentByte.setTextMatrix(50, 740);
//
//                                //Write text
//                                pageContentByte.showText("javawithease.com");
//                                pageContentByte.endText();
//                            }

                            //Close the pdfStamper.
                            pdfStamper.close();

                            System.out.println("done...");
                        }
                    }
                }

            } catch (IOException ex) {
                System.err.println(ex);
            }

//            String Date = Commons.getTodayDateTime();
//            String filecontent = Commons.fileToString(fileTosign);
//            String crc32 = Commons.CalculateCRC(filecontent);
//            String code_fichier = prefixe + "" + crc32 + Date;
//            System.out.println("code du fichier calculé = " + code_fichier);
//
//            // chiffrement des données avec le code comme clé
//            String encrypted = Encryption.encrypt(filecontent, code_fichier);
//            //create dir for encrypted
//            String encryption_dir = Connection.connectionFilePath + File.separator + application + File.separator + "documents_chiffres";
//            (new File(encryption_dir)).mkdirs();
//            Commons.writeTextFile(encryption_dir + File.separator + code_fichier + "_encrypted", encrypted, "UTF-8", "o");
//
//            // signature du encrypted
//            System.out.println("privte_key_ path = " + priv_key_path);
////            UneSignature Unesign = new UneSignature(encrypted, "SHA1withRSA", priv_key_path);
////            byte[] signature = Unesign.sign();
////            String sign_dir = Connection.connectionFilePath+File.separator+application+"signatures";
////            (new File(sign_dir)).mkdirs();
////            Unesign.writeBytesToFile(signature, sign_dir+File.separator+"signature_"+code_fichier+".txt");
////            System.out.println("Signature du fichier générée");
//
//            //generation code QR
//            String code_user = prefixe + "" + Commons.CalculateCRC(code_fichier);
//            String data = code_user;
//            String qrcode_dir = Connection.connectionFilePath + File.separator + application + File.separator + "traitements";
//            (new File(qrcode_dir)).mkdirs();
//            QRCode code_qr = new QRCode(data, qrcode_dir + File.separator + "code_qr_" + code_user + ".png", 125, "png");
//            String fichier_qr = qrcode_dir + File.separator + "code_qr_" + code_user + ".png";
////le code QR est stocké dans qrcode_dir+File.separator+"code_qr_"+code_user+".png"
//            System.out.println("code QR généré avec succès");
//            //placé le code QR sur PDF si PDF
//            String output_sign_file = qrcode_dir + File.separator + "sign_" + code_fichier + ".pdf";
//            PdfReader reader = new PdfReader(fileTosign);
//            PdfStamper stamper = new PdfStamper(reader, new FileOutputStream(output_sign_file));
//            int pages = reader.getNumberOfPages();
////            //Iterate the pdf through pages.
//            for (int i = 1; i <= pages; i++) {
//                PdfContentByte content = stamper.getOverContent(i);
//                Image image = Image.getInstance(fichier_qr);
//                image.scaleAbsoluteHeight(50);
//                image.scaleAbsoluteWidth((image.getWidth() * 50) / image.getHeight());
//                image.setAbsolutePosition(500, 50);
//                content.addImage(image);
//                Font bold = new Font(FontFamily.COURIER, 12, Font.BOLD);
//                Chunk chunk = new Chunk("Click to verify", bold);
//                chunk.setAnchor("http://confianceonline.com/"+application);
//                Phrase p = new Phrase("");
//                p.add(chunk);
//                ColumnText ct = new ColumnText(content);
//                ct.setSimpleColumn(450, 350, 559, 400);
//                ct.addText(p);
//                ct.go();
//            }
//            stamper.close();
//            System.out.println("done");
//            PdfReader pdfReader = new PdfReader(fileTosign);
//            //Create PdfStamper instance.
//            PdfStamper pdfStamper = new PdfStamper(pdfReader, new FileOutputStream(output_sign_file));
//            //Create BaseFont instance.
//            BaseFont baseFont = BaseFont.createFont(
//                    BaseFont.TIMES_ROMAN,
//                    BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
//            //Get the number of pages in pdf.
//            int pages = pdfReader.getNumberOfPages();
//            //Iterate the pdf through pages.
//            for (int i = 1; i <= pages; i++) {
//                //Contain the pdf data.
//                PdfContentByte pageContentByte = pdfStamper.getOverContent(i);
//                pageContentByte.beginText();
//                //Set text font and size.
//                pageContentByte.setFontAndSize(baseFont, 14);
//
//                pageContentByte.setTextMatrix(50, 740);
//
//                //Write text
//                pageContentByte.showText("javawithease.com");
//                pageContentByte.endText();
//            }
//
//            //Close the pdfStamper.
//            pdfStamper.close();
//
//            System.out.println("PDF modified successfully.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_validbtnActionPerformed

    private void prefixetxfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefixetxfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prefixetxfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel back_pnl;
    private javax.swing.JButton browefile;
    private javax.swing.JButton browseimage;
    private javax.swing.JButton browsekey;
    private javax.swing.JButton browsemansign;
    private javax.swing.JButton cancel_btn;
    private javax.swing.JPanel cert_cent_pnl;
    private javax.swing.JButton certcent_btn;
    private javax.swing.JPanel choose_pnl;
    private javax.swing.JTextField clepriv_key;
    private javax.swing.JTextField codeqr_txt;
    private javax.swing.JButton conn_btn;
    private javax.swing.JPanel conn_pnl;
    private javax.swing.JTextField doc_cercenter_txf;
    private javax.swing.JTextField email_txt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField mansign_txt;
    private javax.swing.JPanel not_cent_pnl;
    private javax.swing.JButton notar_btn;
    private javax.swing.JTextField prefixetxf;
    private javax.swing.JTextField pwd_txt;
    private javax.swing.JPanel sign_cent_pnl;
    private javax.swing.JButton signcent_btn;
    private javax.swing.JButton validbtn;
    // End of variables declaration//GEN-END:variables

}
